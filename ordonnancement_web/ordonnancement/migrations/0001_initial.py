# Generated by Django 5.2 on 2025-05-08 19:09

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='ID Machine')),
                ('taches_compatibles', models.JSONField(default=list, verbose_name='Tâches compatibles')),
                ('temps_setup', models.FloatField(default=0, verbose_name='Temps de setup (min)')),
            ],
            options={
                'verbose_name': 'Machine',
                'verbose_name_plural': 'Machines',
            },
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='ID Opérateur')),
                ('learning_params_lc', models.FloatField(verbose_name="Paramètre d'apprentissage LC")),
                ('learning_params_fc', models.FloatField(verbose_name="Paramètre d'oubli FC")),
                ('initial_performance', models.FloatField(default=1.0, verbose_name='Performance initiale')),
                ('temps_inactif', models.FloatField(default=0, verbose_name='Temps inactif (min)')),
                ('temps_travail', models.FloatField(default=0, verbose_name='Temps de travail (min)')),
            ],
            options={
                'verbose_name': 'Opérateur',
                'verbose_name_plural': 'Opérateurs',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='ID Produit')),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantité')),
                ('cr', models.FloatField(verbose_name='Coût de sous-performance (€/min)')),
            ],
            options={
                'verbose_name': 'Produit',
                'verbose_name_plural': 'Produits',
            },
        ),
        migrations.CreateModel(
            name='Simulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom de la simulation')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('temps_actuel', models.FloatField(default=0, verbose_name='Temps actuel (min)')),
                ('makespan_actuel', models.FloatField(default=0, verbose_name='Makespan (min)')),
                ('temps_max', models.FloatField(default=1440, verbose_name='Temps max (min)')),
            ],
            options={
                'verbose_name': 'Simulation',
                'verbose_name_plural': 'Simulations',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Cost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_sous_performance', models.FloatField(default=0, verbose_name='Coût total (€)')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('simulation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='couts', to='ordonnancement.simulation')),
            ],
            options={
                'verbose_name': 'Coût',
                'verbose_name_plural': 'Coûts',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='ID Tâche')),
                ('phase', models.PositiveIntegerField(verbose_name='Phase')),
                ('temps_standard', models.FloatField(verbose_name='Temps standard (min)')),
                ('quantite', models.PositiveIntegerField(verbose_name='Quantité')),
                ('cr', models.FloatField(verbose_name='Coût de sous-performance')),
                ('temps_reel', models.FloatField(default=0, verbose_name='Temps réel (min)')),
                ('temps_attente', models.FloatField(default=0, verbose_name="Temps d'attente (min)")),
                ('est_en_cours', models.BooleanField(default=False, verbose_name='En cours')),
                ('machine_requise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ordonnancement.machine', verbose_name='Machine requise')),
                ('precedence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ordonnancement.task', verbose_name='Tâche précédente')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taches', to='ordonnancement.product')),
            ],
            options={
                'verbose_name': 'Tâche',
                'verbose_name_plural': 'Tâches',
                'ordering': ['phase'],
            },
        ),
        migrations.AddField(
            model_name='simulation',
            name='tasks_terminees',
            field=models.ManyToManyField(blank=True, to='ordonnancement.task', verbose_name='Tâches terminées'),
        ),
        migrations.CreateModel(
            name='MachineHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('debut', models.DateTimeField(verbose_name='Début')),
                ('fin', models.DateTimeField(verbose_name='Fin')),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historique', to='ordonnancement.machine')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ordonnancement.operator')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ordonnancement.task')),
            ],
            options={
                'verbose_name': 'Historique machine',
                'verbose_name_plural': 'Historiques machines',
                'ordering': ['-debut'],
            },
        ),
        migrations.CreateModel(
            name='Evenement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_evenement', models.CharField(choices=[('debut_tache', 'Début de tâche'), ('fin_tache', 'Fin de tâche'), ('arret', 'Arrêt de simulation')], max_length=50)),
                ('timestamp', models.FloatField(verbose_name='Temps (min)')),
                ('details', models.JSONField(blank=True, default=dict)),
                ('operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ordonnancement.operator')),
                ('simulation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evenements', to='ordonnancement.simulation')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ordonnancement.task')),
            ],
            options={
                'verbose_name': 'Événement',
                'verbose_name_plural': 'Événements',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CostDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant', models.FloatField(verbose_name='Montant (€)')),
                ('type_cout', models.CharField(choices=[('sous_performance', 'Sous-performance'), ('attente', "Temps d'attente")], max_length=50)),
                ('cost', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='ordonnancement.cost')),
                ('operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ordonnancement.operator')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ordonnancement.task')),
            ],
            options={
                'verbose_name': 'Détail coût',
                'verbose_name_plural': 'Détails coûts',
            },
        ),
        migrations.CreateModel(
            name='TaskAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('debut', models.DateTimeField(verbose_name='Début')),
                ('fin', models.DateTimeField(verbose_name='Fin')),
                ('temps_reel', models.FloatField(verbose_name='Temps réel (min)')),
                ('est_terminee', models.BooleanField(default=False, verbose_name='Terminée')),
                ('machine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ordonnancement.machine')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignations', to='ordonnancement.operator')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignations', to='ordonnancement.task')),
            ],
            options={
                'verbose_name': 'Assignation de tâche',
                'verbose_name_plural': 'Assignations de tâches',
                'ordering': ['-debut'],
            },
        ),
        migrations.CreateModel(
            name='WorkHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('debut', models.DateTimeField(verbose_name='Début')),
                ('fin', models.DateTimeField(blank=True, null=True, verbose_name='Fin')),
                ('machine', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ordonnancement.machine')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historique_travail', to='ordonnancement.operator')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ordonnancement.task')),
            ],
            options={
                'verbose_name': 'Historique travail',
                'verbose_name_plural': 'Historiques travail',
                'ordering': ['-debut'],
            },
        ),
        migrations.CreateModel(
            name='OperatorPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('performance', models.FloatField(verbose_name='Performance (0-1)')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Date/heure')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performances', to='ordonnancement.operator')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ordonnancement.task')),
            ],
            options={
                'verbose_name': 'Performance opérateur',
                'verbose_name_plural': 'Performances opérateurs',
                'unique_together': {('operator', 'task', 'timestamp')},
            },
        ),
    ]
